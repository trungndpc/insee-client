{"ast":null,"code":"// import data from './data_location.json'\nimport data from './province.json';\n\nfunction compare(a, b) {\n  if (a.value < b.value) {\n    return -1;\n  }\n\n  if (a.value > b.value) {\n    return 1;\n  }\n\n  return 0;\n}\n\nvar listCity = [];\n\nfor (const key in data) {\n  let r = {\n    key: key,\n    value: data[key].name\n  };\n\n  if (data[key].status != 0) {\n    listCity.push(r);\n  }\n}\n\nlistCity.sort(function (a, b) {\n  return a.value - b.value;\n});\nlistCity = listCity.sort(compare);\nvar listDistrict = [];\n\nfor (const key in data) {\n  let city = data[key];\n  let districts = city[\"districts\"];\n\n  for (const disKey in districts) {\n    let oDistrict = {\n      key: disKey,\n      value: {\n        name: districts[disKey].name,\n        cityId: key\n      }\n    };\n    listDistrict.push(oDistrict);\n  }\n}\n\nexport class City {\n  static getName(id) {\n    for (const key in data) {\n      if (id == key) {\n        return data[key].name;\n      }\n    }\n\n    return null;\n  }\n\n  static getList() {\n    return listCity;\n  }\n\n}\nexport class District {\n  static getName(districtId) {\n    for (const key in listDistrict) {\n      console.log(key);\n\n      if (key == districtId) {\n        return listDistrict[key].name;\n      }\n    }\n  }\n\n  static getList(cityId) {\n    if (cityId == 0) {\n      return [];\n    }\n\n    let city = data[cityId];\n    let districts = city.districts;\n    let rs = [];\n\n    for (const district of districts) {\n      let o = {\n        key: district.id,\n        value: district.name\n      };\n      rs.push(o);\n    }\n\n    rs = rs.sort(compare);\n    return rs;\n  }\n\n}","map":{"version":3,"sources":["/home/trungnd2/Downloads/insee-client/src/utils/ProvinceUtil.js"],"names":["data","compare","a","b","value","listCity","key","r","name","status","push","sort","listDistrict","city","districts","disKey","oDistrict","cityId","City","getName","id","getList","District","districtId","console","log","rs","district","o"],"mappings":"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","sourcesContent":["// import data from './data_location.json'\nimport data from './province.json'\n\nfunction compare(a, b) {\n    if (a.value < b.value) {\n        return -1;\n    }\n    if (a.value > b.value) {\n        return 1;\n    }\n    return 0;\n}\n\nvar listCity = [];\nfor (const key in data) {\n    let r = { key: key, value: data[key].name }\n    if (data[key].status != 0) {\n        listCity.push(r);\n    }\n}\nlistCity.sort(function (a, b) {\n    return a.value - b.value;\n})\nlistCity = listCity.sort(compare)\n\nvar listDistrict = [];\nfor (const key in data) {\n    let city = data[key];\n    let districts = city[\"districts\"];\n    for (const disKey in districts) {\n        let oDistrict = { key: disKey, value: { name: districts[disKey].name, cityId: key } }\n        listDistrict.push(oDistrict);\n    }\n}\n\n\n\nexport class City {\n\n    static getName(id) {\n        for (const key in data) {\n            if (id == key) {\n                return data[key].name;\n            }\n        }\n        return null;\n    }\n\n    static getList() {\n        return listCity\n    }\n}\n\nexport class District {\n    static getName(districtId) {\n        for (const key in listDistrict) {\n            console.log(key)\n            if (key == districtId) {\n                return listDistrict[key].name\n            }\n        }\n    }\n\n    static getList(cityId) {\n        if (cityId == 0) {\n            return []\n        }\n        let city = data[cityId];\n        let districts = city.districts;\n        let rs = []\n        for (const district of districts) {\n            let o = { key: district.id, value: district.name }\n            rs.push(o);\n        }\n        rs = rs.sort(compare);\n        return rs;\n    }\n}"]},"metadata":{},"sourceType":"module"}