{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst native_bridge_1 = require(\"./utils/native-bridge\");\n\nconst config_1 = require(\"./config\");\n/**\n * Class chứa các action Misc\n */\n\n\nclass Misc {\n  /**\n   * Check app installed\n   * @example\n   * ZJSBridge.Misc.checkAppInstalled(data, e => {console.log(e)})\n   * @param {object} data\n   * ```\n   * {\n   *      \"totalApp\": 3,\n   *      \"apps\": [\n   *          {\n   *          \"app_1\": {\n   *                      \"packageName\": \"com.vng.tvl\",\n   *                      \"schema\": \"zalo-4341275532218618714://\",\n   *                      \"wpStoreUrl\": \"\"\n   *                   }\n   *          },\n   *          {\n   *          \"app_2\": {\n   *                      \"packageName\": \"com.vng.gpdttkvn\",\n   *                      \"schema\": \"zalo-3945316935671174926://\",\n   *                      \"wpStoreUrl\": \"\"\n   *                   }\n   *          },\n   *          {\n   *          \"app_3\": {\n   *                      \"packageName\": \"gsn.game.zingplaynew1\",\n   *                      \"schema\": \"zalo-3554569838779270945://\",\n   *                      \"wpStoreUrl\": \"\"\n   *                   }\n   *          }\n   *      ]\n   * }\n   * ```\n   * @param {void} callback Hàm callback trả về kết quả sau khi gọi action\n   */\n  static checkAppInstalled(data, callback) {\n    return native_bridge_1.default.jsCall(config_1.Action.checkappinstalled, data, callback);\n  }\n  /**\n   * Query show.\n   * @example\n   * ZJSBridge.Misc.queryShow(data, e => {console.log(e)})\n   * @param {object} data\n   * ```\n   * {\n   *      \"query\": \"Exit ?\",\n   *      \"touserid\": xxx (encode),\n   * }\n   * ```\n   * @param {void} callback Hàm callback trả về kết quả sau khi gọi action\n   */\n\n\n  static queryShow(data, callback) {\n    data[\"zapp\"] = native_bridge_1.default.getAppId();\n    return native_bridge_1.default.jsCall(config_1.Action.queryshow, data, callback);\n  }\n  /**\n   * Query hide.\n   * @example\n   * ZJSBridge.Misc.queryHide(data, e => {console.log(e)})\n   * @param {object} data\n   * ```\n   * {\n   *      \"query\": \"Exit ?\",\n   *      \"touserid\": xxx (encode),\n   * }\n   * ```\n   * @param {void} callback Hàm callback trả về kết quả sau khi gọi action\n   */\n\n\n  static queryHide(data, callback) {\n    data[\"zapp\"] = native_bridge_1.default.getAppId();\n    return native_bridge_1.default.jsCall(config_1.Action.queryhide, data, callback);\n  }\n  /**\n   * Open in app rw.\n   * @example\n   * ZJSBridge.Misc.openInAppRw(data, e => {console.log(e)})\n   * @param {object} data\n   * ```\n   * {\n   *      \"url\":\"http://xx.xx\"\n   * }\n   * ```\n   * @param {void} callback Hàm callback trả về kết quả sau khi gọi action\n   */\n\n\n  static openInAppRw(data, callback) {\n    return native_bridge_1.default.jsCall(config_1.Action.openinapprw, data, callback);\n  }\n  /**\n   * Kiểm tra trạng thái thu thập step data:\n   * - 0 -> Off tracking\n   * - 1 -> On tracking\n   * @example\n   * ZJSBridge.Misc.getTrackingStatus(e => {console.log(e)})\n   * @param {void} callback Hàm callback trả về kết quả sau khi gọi action\n   */\n\n\n  static getTrackingStatus(callback) {\n    return native_bridge_1.default.jsCall(config_1.Action.gettrackingstatus, {}, callback);\n  }\n  /**\n   * Set trạng thái thu thập step data\n   * - 0 -> Off tracking\n   * - 1 -> On tracking\n   * @example\n   * ZJSBridge.Misc.setTrackingStatus(data, e => {console.log(e)})\n   * @param {object} data\n   * ```\n   * {\n   *      \"status\": 0 | 1\n   * }\n   * ```\n   * - status:\n   *      - 0 -> Off tracking\n   *      - 1 -> On tracking\n   * @param {void} callback Hàm callback trả về kết quả sau khi gọi action\n   */\n\n\n  static setTrackingStatus(data, callback) {\n    return native_bridge_1.default.jsCall(config_1.Action.settrackingstatus, data, callback);\n  }\n  /**\n   * Lấy thông tin step của ngày hiện tại tính đến thời điểm gọi:\n   * - \"steps\" : tổng số step\n   * - \"calories\" : tổng số calories tiêu hao\n   * - \"distance\" : tổng quãng đường di chuyển\"\n   * @example\n   * ZJSBridge.Misc.getDayStep(e => {console.log(e)})\n   * @param {void} callback Hàm callback trả về kết quả sau khi gọi action\n   */\n\n\n  static getDayStep(callback) {\n    return native_bridge_1.default.jsCall(config_1.Action.getdaystep, {}, callback);\n  }\n  /**\n   * Force submit toàn bộ step data từ client lên server.\n   * @example\n   * ZJSBridge.Misc.forceSubmitData(e => {console.log(e)})\n   * @param {void} callback Hàm callback trả về kết quả sau khi gọi action\n   */\n\n\n  static forceSubmitData(callback) {\n    return native_bridge_1.default.jsCall(config_1.Action.forcesubmitdata, {}, callback);\n  }\n  /**\n   * Set weight config phục vụ cho việc tính toán calories.\n   * @example\n   * ZJSBridge.Misc.setWeight(data, e => {console.log(e)})\n   * @param {object} data\n   * ```\n   * {\n   *      \"weight\": 60\n   * }\n   * ```\n   * @param {void} callback Hàm callback trả về kết quả sau khi gọi action\n   */\n\n\n  static setWeight(data, callback) {\n    return native_bridge_1.default.jsCall(config_1.Action.setweight, data, callback);\n  }\n  /**\n   * Open profile ext.\n   * @example\n   * ZJSBridge.Misc.openProfileExt(data, e => {console.log(e)})\n   * @param {object} data\n   * ```\n   * {\n   *      \"profile_uid\": xxx,\n   *      \"type\": \"0\" | \"1\" | \"2\",\n   *      \"app_id\": xxx (appIdNoise)\n   * }\n   * ```\n   * - type:\n   *      - 0: mở page (OA), pageId truyền lên được encode bằng ZCypher, (ZCypher.encodePageId(pageId)).\n   *      - 1: Mở profile User, userId truyền lên được encode bằng ZCypher by AppId.\n   *      - 2: Mở profile OA bằng Alias (field uid truyền lên là alias của OA).\n   * > Trong trường hợp không decode thì client sẽ sử dụng trực tiếp field uId trong options gởi lên để mở profile.\n   * > Nếu có decode thì dữ liệu trả về sẽ là trường uId đã được decode.\n   * @param {void} callback Hàm callback trả về kết quả sau khi gọi action\n   */\n\n\n  static openProfileExt(data, callback) {\n    data[\"zapp\"] = native_bridge_1.default.getAppId();\n    return native_bridge_1.default.jsCall(config_1.Action.openProfileExt, data, callback);\n  }\n  /**\n   * Download bộ sticker về điện thoại user\n   * @example\n   * ZJSBridge.Misc.downloadCate(data, e => {console.log(e)})\n   * @param {object} data\n   * ```\n   *{\n   *   \"cateDetailsInfo\":{\n   *      \"id\":50,\n   *      \"name\":\"Khu Vườn Trên Mây 1\",\n   *      \"totalImage\":34,\n   *      \"thumbUrl\":\"http://api.zaloapp.com/c/0/c/7/c/50/preview/\",\n   *      \"iconUrl\":\"http://api.zaloapp.com/c/0/c/7/c/50/icon/kvtm1_ic.png\",\n   *      \"iconPreview\":\"http://api.zaloapp.com/c/0/c/7/c/50/icon_pre/kvtm1_thumb.png\",\n   *      \"status\":0,\n   *      \"version\":1,\n   *      \"thumbImg\":\"http://api.zaloapp.com/c/0/c/7/c/50/preview/kvtm1_cover.png\",\n   *      \"source\":\"\",\n   *      \"permission\":1,\n   *      \"downloaded\":0,\n   *      \"cost\":0,\n   *      \"purchase\":false,\n   *      \"qrCode\":\"http://qr-stickers.zaloapp.com/1/qrstickerc0c07e2a426fab31f27e.jpg\",\n   *      \"linkPromote\":\"http://stickers.zaloapp.com/detail?cid=c65678bc44f9ada7f4e8\",\n   *      \"slogan\":null,\n   *      \"isHidden\":0\n   *   }\n   *}\n   * ```\n   * - cateDetailsInfo : giá trị tương ứng bộ sticker cần download (là một string json)\n   * > Trong trường hợp không decode thì client sẽ sử dụng trực tiếp field cate_id trong cateDetailsInfo trong options gởi lên để mở profile.\n   * > Nếu có decode thì dữ liệu dữ liệu trả về là cate_id đã được decode.\n   * @param {void} callback Hàm callback trả về kết quả sau khi gọi action\n   */\n\n\n  static downloadCate(data, callback) {\n    return native_bridge_1.default.jsCall(config_1.Action.downloadcate, data, callback);\n  }\n\n}\n\nexports.default = Misc;","map":{"version":3,"sources":["/home/trungnd2/Downloads/insee-client/node_modules/zalo-js-bridge/lib/misc.js"],"names":["Object","defineProperty","exports","value","native_bridge_1","require","config_1","Misc","checkAppInstalled","data","callback","default","jsCall","Action","checkappinstalled","queryShow","getAppId","queryshow","queryHide","queryhide","openInAppRw","openinapprw","getTrackingStatus","gettrackingstatus","setTrackingStatus","settrackingstatus","getDayStep","getdaystep","forceSubmitData","forcesubmitdata","setWeight","setweight","openProfileExt","downloadCate","downloadcate"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst native_bridge_1 = require(\"./utils/native-bridge\");\nconst config_1 = require(\"./config\");\n/**\n * Class chứa các action Misc\n */\nclass Misc {\n    /**\n     * Check app installed\n     * @example\n     * ZJSBridge.Misc.checkAppInstalled(data, e => {console.log(e)})\n     * @param {object} data\n     * ```\n     * {\n     *      \"totalApp\": 3,\n     *      \"apps\": [\n     *          {\n     *          \"app_1\": {\n     *                      \"packageName\": \"com.vng.tvl\",\n     *                      \"schema\": \"zalo-4341275532218618714://\",\n     *                      \"wpStoreUrl\": \"\"\n     *                   }\n     *          },\n     *          {\n     *          \"app_2\": {\n     *                      \"packageName\": \"com.vng.gpdttkvn\",\n     *                      \"schema\": \"zalo-3945316935671174926://\",\n     *                      \"wpStoreUrl\": \"\"\n     *                   }\n     *          },\n     *          {\n     *          \"app_3\": {\n     *                      \"packageName\": \"gsn.game.zingplaynew1\",\n     *                      \"schema\": \"zalo-3554569838779270945://\",\n     *                      \"wpStoreUrl\": \"\"\n     *                   }\n     *          }\n     *      ]\n     * }\n     * ```\n     * @param {void} callback Hàm callback trả về kết quả sau khi gọi action\n     */\n    static checkAppInstalled(data, callback) {\n        return native_bridge_1.default.jsCall(config_1.Action.checkappinstalled, data, callback);\n    }\n    /**\n     * Query show.\n     * @example\n     * ZJSBridge.Misc.queryShow(data, e => {console.log(e)})\n     * @param {object} data\n     * ```\n     * {\n     *      \"query\": \"Exit ?\",\n     *      \"touserid\": xxx (encode),\n     * }\n     * ```\n     * @param {void} callback Hàm callback trả về kết quả sau khi gọi action\n     */\n    static queryShow(data, callback) {\n        data[\"zapp\"] = native_bridge_1.default.getAppId();\n        return native_bridge_1.default.jsCall(config_1.Action.queryshow, data, callback);\n    }\n    /**\n     * Query hide.\n     * @example\n     * ZJSBridge.Misc.queryHide(data, e => {console.log(e)})\n     * @param {object} data\n     * ```\n     * {\n     *      \"query\": \"Exit ?\",\n     *      \"touserid\": xxx (encode),\n     * }\n     * ```\n     * @param {void} callback Hàm callback trả về kết quả sau khi gọi action\n     */\n    static queryHide(data, callback) {\n        data[\"zapp\"] = native_bridge_1.default.getAppId();\n        return native_bridge_1.default.jsCall(config_1.Action.queryhide, data, callback);\n    }\n    /**\n     * Open in app rw.\n     * @example\n     * ZJSBridge.Misc.openInAppRw(data, e => {console.log(e)})\n     * @param {object} data\n     * ```\n     * {\n     *      \"url\":\"http://xx.xx\"\n     * }\n     * ```\n     * @param {void} callback Hàm callback trả về kết quả sau khi gọi action\n     */\n    static openInAppRw(data, callback) {\n        return native_bridge_1.default.jsCall(config_1.Action.openinapprw, data, callback);\n    }\n    /**\n     * Kiểm tra trạng thái thu thập step data:\n     * - 0 -> Off tracking\n     * - 1 -> On tracking\n     * @example\n     * ZJSBridge.Misc.getTrackingStatus(e => {console.log(e)})\n     * @param {void} callback Hàm callback trả về kết quả sau khi gọi action\n     */\n    static getTrackingStatus(callback) {\n        return native_bridge_1.default.jsCall(config_1.Action.gettrackingstatus, {}, callback);\n    }\n    /**\n     * Set trạng thái thu thập step data\n     * - 0 -> Off tracking\n     * - 1 -> On tracking\n     * @example\n     * ZJSBridge.Misc.setTrackingStatus(data, e => {console.log(e)})\n     * @param {object} data\n     * ```\n     * {\n     *      \"status\": 0 | 1\n     * }\n     * ```\n     * - status:\n     *      - 0 -> Off tracking\n     *      - 1 -> On tracking\n     * @param {void} callback Hàm callback trả về kết quả sau khi gọi action\n     */\n    static setTrackingStatus(data, callback) {\n        return native_bridge_1.default.jsCall(config_1.Action.settrackingstatus, data, callback);\n    }\n    /**\n     * Lấy thông tin step của ngày hiện tại tính đến thời điểm gọi:\n     * - \"steps\" : tổng số step\n     * - \"calories\" : tổng số calories tiêu hao\n     * - \"distance\" : tổng quãng đường di chuyển\"\n     * @example\n     * ZJSBridge.Misc.getDayStep(e => {console.log(e)})\n     * @param {void} callback Hàm callback trả về kết quả sau khi gọi action\n     */\n    static getDayStep(callback) {\n        return native_bridge_1.default.jsCall(config_1.Action.getdaystep, {}, callback);\n    }\n    /**\n     * Force submit toàn bộ step data từ client lên server.\n     * @example\n     * ZJSBridge.Misc.forceSubmitData(e => {console.log(e)})\n     * @param {void} callback Hàm callback trả về kết quả sau khi gọi action\n     */\n    static forceSubmitData(callback) {\n        return native_bridge_1.default.jsCall(config_1.Action.forcesubmitdata, {}, callback);\n    }\n    /**\n     * Set weight config phục vụ cho việc tính toán calories.\n     * @example\n     * ZJSBridge.Misc.setWeight(data, e => {console.log(e)})\n     * @param {object} data\n     * ```\n     * {\n     *      \"weight\": 60\n     * }\n     * ```\n     * @param {void} callback Hàm callback trả về kết quả sau khi gọi action\n     */\n    static setWeight(data, callback) {\n        return native_bridge_1.default.jsCall(config_1.Action.setweight, data, callback);\n    }\n    /**\n     * Open profile ext.\n     * @example\n     * ZJSBridge.Misc.openProfileExt(data, e => {console.log(e)})\n     * @param {object} data\n     * ```\n     * {\n     *      \"profile_uid\": xxx,\n     *      \"type\": \"0\" | \"1\" | \"2\",\n     *      \"app_id\": xxx (appIdNoise)\n     * }\n     * ```\n     * - type:\n     *      - 0: mở page (OA), pageId truyền lên được encode bằng ZCypher, (ZCypher.encodePageId(pageId)).\n     *      - 1: Mở profile User, userId truyền lên được encode bằng ZCypher by AppId.\n     *      - 2: Mở profile OA bằng Alias (field uid truyền lên là alias của OA).\n     * > Trong trường hợp không decode thì client sẽ sử dụng trực tiếp field uId trong options gởi lên để mở profile.\n     * > Nếu có decode thì dữ liệu trả về sẽ là trường uId đã được decode.\n     * @param {void} callback Hàm callback trả về kết quả sau khi gọi action\n     */\n    static openProfileExt(data, callback) {\n        data[\"zapp\"] = native_bridge_1.default.getAppId();\n        return native_bridge_1.default.jsCall(config_1.Action.openProfileExt, data, callback);\n    }\n    /**\n     * Download bộ sticker về điện thoại user\n     * @example\n     * ZJSBridge.Misc.downloadCate(data, e => {console.log(e)})\n     * @param {object} data\n     * ```\n     *{\n     *   \"cateDetailsInfo\":{\n     *      \"id\":50,\n     *      \"name\":\"Khu Vườn Trên Mây 1\",\n     *      \"totalImage\":34,\n     *      \"thumbUrl\":\"http://api.zaloapp.com/c/0/c/7/c/50/preview/\",\n     *      \"iconUrl\":\"http://api.zaloapp.com/c/0/c/7/c/50/icon/kvtm1_ic.png\",\n     *      \"iconPreview\":\"http://api.zaloapp.com/c/0/c/7/c/50/icon_pre/kvtm1_thumb.png\",\n     *      \"status\":0,\n     *      \"version\":1,\n     *      \"thumbImg\":\"http://api.zaloapp.com/c/0/c/7/c/50/preview/kvtm1_cover.png\",\n     *      \"source\":\"\",\n     *      \"permission\":1,\n     *      \"downloaded\":0,\n     *      \"cost\":0,\n     *      \"purchase\":false,\n     *      \"qrCode\":\"http://qr-stickers.zaloapp.com/1/qrstickerc0c07e2a426fab31f27e.jpg\",\n     *      \"linkPromote\":\"http://stickers.zaloapp.com/detail?cid=c65678bc44f9ada7f4e8\",\n     *      \"slogan\":null,\n     *      \"isHidden\":0\n     *   }\n     *}\n     * ```\n     * - cateDetailsInfo : giá trị tương ứng bộ sticker cần download (là một string json)\n     * > Trong trường hợp không decode thì client sẽ sử dụng trực tiếp field cate_id trong cateDetailsInfo trong options gởi lên để mở profile.\n     * > Nếu có decode thì dữ liệu dữ liệu trả về là cate_id đã được decode.\n     * @param {void} callback Hàm callback trả về kết quả sau khi gọi action\n     */\n    static downloadCate(data, callback) {\n        return native_bridge_1.default.jsCall(config_1.Action.downloadcate, data, callback);\n    }\n}\nexports.default = Misc;\n"]},"metadata":{},"sourceType":"script"}