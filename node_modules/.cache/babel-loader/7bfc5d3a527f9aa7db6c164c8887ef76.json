{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst request_1 = require(\"./request\");\n\nconst common_1 = require(\"./common\");\n\nclass AuthUtils {\n  constructor() {\n    this.getAccessToken = cb => {\n      if (this.accessToken) {\n        cb && cb(this.accessToken);\n      } else {\n        request_1.default.execute(\"https://oauth.zaloapp.com/v3/access_token\", \"get\", {\n          app_id: this.appId,\n          redirect_uri: this.redirectUri,\n          code: this.authenticationCode,\n          isSDK: true\n        }, response => {\n          if (response) {\n            if (response.access_token) {\n              this.accessToken = response.access_token;\n              const expiredIn = parseInt(response.expires_in) * 1000; // Auto get new Access Token after expired time\n\n              setTimeout(() => {\n                this.accessToken = \"\";\n                this.getAccessToken();\n              }, expiredIn);\n            }\n          }\n\n          return cb && cb(this.accessToken);\n        });\n      }\n    };\n\n    this.accessToken = null;\n    this.authenticationCode = common_1.getToken(\"zoauth\") || \"\";\n    this.appId = window.zAppID || common_1.getToken(\"zapp\");\n    this.redirectUri = `https://h5.zdn.vn/static/${this.appId}/`;\n  }\n\n}\n\nAuthUtils.getInstance = () => {\n  if (!AuthUtils.instance) {\n    AuthUtils.instance = new AuthUtils();\n    return AuthUtils.instance;\n  }\n\n  return AuthUtils.instance;\n};\n\nexports.default = AuthUtils.getInstance();","map":{"version":3,"sources":["/home/trungnd2/Downloads/insee-client/node_modules/zalo-js-bridge/lib/utils/auth.js"],"names":["Object","defineProperty","exports","value","request_1","require","common_1","AuthUtils","constructor","getAccessToken","cb","accessToken","default","execute","app_id","appId","redirect_uri","redirectUri","code","authenticationCode","isSDK","response","access_token","expiredIn","parseInt","expires_in","setTimeout","getToken","window","zAppID","getInstance","instance"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,MAAMC,SAAS,GAAGC,OAAO,CAAC,WAAD,CAAzB;;AACA,MAAMC,QAAQ,GAAGD,OAAO,CAAC,UAAD,CAAxB;;AACA,MAAME,SAAN,CAAgB;AACZC,EAAAA,WAAW,GAAG;AACV,SAAKC,cAAL,GAAuBC,EAAD,IAAQ;AAC1B,UAAI,KAAKC,WAAT,EAAsB;AAClBD,QAAAA,EAAE,IAAIA,EAAE,CAAC,KAAKC,WAAN,CAAR;AACH,OAFD,MAGK;AACDP,QAAAA,SAAS,CAACQ,OAAV,CAAkBC,OAAlB,CAA0B,2CAA1B,EAAuE,KAAvE,EAA8E;AAC1EC,UAAAA,MAAM,EAAE,KAAKC,KAD6D;AAE1EC,UAAAA,YAAY,EAAE,KAAKC,WAFuD;AAG1EC,UAAAA,IAAI,EAAE,KAAKC,kBAH+D;AAI1EC,UAAAA,KAAK,EAAE;AAJmE,SAA9E,EAKIC,QAAD,IAAc;AACb,cAAIA,QAAJ,EAAc;AACV,gBAAIA,QAAQ,CAACC,YAAb,EAA2B;AACvB,mBAAKX,WAAL,GAAmBU,QAAQ,CAACC,YAA5B;AACA,oBAAMC,SAAS,GAAGC,QAAQ,CAACH,QAAQ,CAACI,UAAV,CAAR,GAAgC,IAAlD,CAFuB,CAGvB;;AACAC,cAAAA,UAAU,CAAC,MAAM;AACb,qBAAKf,WAAL,GAAmB,EAAnB;AACA,qBAAKF,cAAL;AACH,eAHS,EAGPc,SAHO,CAAV;AAIH;AACJ;;AACD,iBAAOb,EAAE,IAAIA,EAAE,CAAC,KAAKC,WAAN,CAAf;AACH,SAlBD;AAmBH;AACJ,KAzBD;;AA0BA,SAAKA,WAAL,GAAmB,IAAnB;AACA,SAAKQ,kBAAL,GAA0Bb,QAAQ,CAACqB,QAAT,CAAkB,QAAlB,KAA+B,EAAzD;AACA,SAAKZ,KAAL,GAAaa,MAAM,CAACC,MAAP,IAAiBvB,QAAQ,CAACqB,QAAT,CAAkB,MAAlB,CAA9B;AACA,SAAKV,WAAL,GAAoB,4BAA2B,KAAKF,KAAM,GAA1D;AACH;;AAhCW;;AAkChBR,SAAS,CAACuB,WAAV,GAAwB,MAAM;AAC1B,MAAI,CAACvB,SAAS,CAACwB,QAAf,EAAyB;AACrBxB,IAAAA,SAAS,CAACwB,QAAV,GAAqB,IAAIxB,SAAJ,EAArB;AACA,WAAOA,SAAS,CAACwB,QAAjB;AACH;;AACD,SAAOxB,SAAS,CAACwB,QAAjB;AACH,CAND;;AAOA7B,OAAO,CAACU,OAAR,GAAkBL,SAAS,CAACuB,WAAV,EAAlB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst request_1 = require(\"./request\");\nconst common_1 = require(\"./common\");\nclass AuthUtils {\n    constructor() {\n        this.getAccessToken = (cb) => {\n            if (this.accessToken) {\n                cb && cb(this.accessToken);\n            }\n            else {\n                request_1.default.execute(\"https://oauth.zaloapp.com/v3/access_token\", \"get\", {\n                    app_id: this.appId,\n                    redirect_uri: this.redirectUri,\n                    code: this.authenticationCode,\n                    isSDK: true,\n                }, (response) => {\n                    if (response) {\n                        if (response.access_token) {\n                            this.accessToken = response.access_token;\n                            const expiredIn = parseInt(response.expires_in) * 1000;\n                            // Auto get new Access Token after expired time\n                            setTimeout(() => {\n                                this.accessToken = \"\";\n                                this.getAccessToken();\n                            }, expiredIn);\n                        }\n                    }\n                    return cb && cb(this.accessToken);\n                });\n            }\n        };\n        this.accessToken = null;\n        this.authenticationCode = common_1.getToken(\"zoauth\") || \"\";\n        this.appId = window.zAppID || common_1.getToken(\"zapp\");\n        this.redirectUri = `https://h5.zdn.vn/static/${this.appId}/`;\n    }\n}\nAuthUtils.getInstance = () => {\n    if (!AuthUtils.instance) {\n        AuthUtils.instance = new AuthUtils();\n        return AuthUtils.instance;\n    }\n    return AuthUtils.instance;\n};\nexports.default = AuthUtils.getInstance();\n"]},"metadata":{},"sourceType":"script"}