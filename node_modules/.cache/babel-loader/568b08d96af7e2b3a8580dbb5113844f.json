{"ast":null,"code":"import moment from 'moment';\nconst month_to_vi = {\n  1: 'tháng 1',\n  2: 'tháng 2',\n  3: 'tháng 3',\n  4: 'tháng 4',\n  5: 'tháng 5',\n  6: 'tháng 6',\n  7: 'tháng 7',\n  8: 'tháng 8',\n  9: 'tháng 9',\n  10: 'tháng 10',\n  11: 'tháng 11',\n  12: 'tháng 12'\n};\nexport default class DateTimeUtil {\n  static diffTime(time) {\n    // Second\n    const secondDiff = Math.ceil(Math.abs(new Date().getTime() - time * 1000) / 1000);\n\n    if (secondDiff < 60) {\n      return secondDiff + ' giây trước';\n    }\n\n    const minuteDiff = Math.ceil(secondDiff / 60);\n\n    if (minuteDiff < 60) {\n      return minuteDiff + ' phút trước';\n    }\n\n    const hourDiff = Math.ceil(minuteDiff / 60);\n\n    if (hourDiff < 24) {\n      return hourDiff + ' giờ trước';\n    }\n\n    const dayDiff = Math.ceil(hourDiff / 24);\n\n    if (dayDiff < 3) {\n      return `${dayDiff} ngày trước`;\n    }\n\n    return moment.unix(time).format('DD/MM/YYYY');\n  }\n\n  static getArrayMonth() {\n    return [{\n      name: 'Tháng 1',\n      id: 1\n    }, {\n      name: 'Tháng 2',\n      id: 2\n    }, {\n      name: 'Tháng 3',\n      id: 3\n    }, {\n      name: 'Tháng 4',\n      id: 4\n    }, {\n      name: 'Tháng 5',\n      id: 5\n    }, {\n      name: 'Tháng 6',\n      id: 6\n    }, {\n      name: 'Tháng 7',\n      id: 7\n    }, {\n      name: 'Tháng 8',\n      id: 8\n    }, {\n      name: 'Tháng 9',\n      id: 9\n    }, {\n      name: 'Tháng 10',\n      id: 10\n    }, {\n      name: 'Tháng 11',\n      id: 11\n    }, {\n      name: 'Tháng 12',\n      id: 12\n    }];\n  }\n\n  static getArrayYear() {\n    let array = [];\n\n    for (var i = 1920; i <= 2020; i++) {\n      array.push(i);\n    }\n\n    return array;\n  }\n\n  static getArrayDay(month, year) {\n    let maxDay = new Date(year, month, 0).getDate();\n    let array = [];\n\n    for (var i = 1; i <= maxDay; i++) {\n      array.push(i);\n    }\n\n    return array;\n  }\n\n  static formatMonth(date) {\n    var month = date.getMonth() + 1;\n    var year = date.getFullYear();\n    return \"Tháng \" + month + \" năm \" + year;\n  }\n\n  static toStringDiffTime(date) {\n    if (!date) return '';\n    return [date.getDate(), date.getMonth() + 1, date.getFullYear()].join('/');\n  }\n\n  static toString(timestamp) {\n    let date = new Date(timestamp);\n    let day = date.getDate();\n    let month = date.getMonth() + 1;\n    let year = date.getFullYear();\n    return day + ' ' + month_to_vi[month] + ', ' + year;\n  }\n\n}","map":{"version":3,"sources":["/home/trungnd2/Documents/project/new/insee-client/src/utils/DateTimeUtil.js"],"names":["moment","month_to_vi","DateTimeUtil","diffTime","time","secondDiff","Math","ceil","abs","Date","getTime","minuteDiff","hourDiff","dayDiff","unix","format","getArrayMonth","name","id","getArrayYear","array","i","push","getArrayDay","month","year","maxDay","getDate","formatMonth","date","getMonth","getFullYear","toStringDiffTime","join","toString","timestamp","day"],"mappings":"AACA,OAAOA,MAAP,MAAmB,QAAnB;AAEA,MAAMC,WAAW,GAAG;AAChB,KAAG,SADa;AAEhB,KAAG,SAFa;AAGhB,KAAG,SAHa;AAIhB,KAAG,SAJa;AAKhB,KAAG,SALa;AAMhB,KAAG,SANa;AAOhB,KAAG,SAPa;AAQhB,KAAG,SARa;AAShB,KAAG,SATa;AAUhB,MAAI,UAVY;AAWhB,MAAI,UAXY;AAYhB,MAAI;AAZY,CAApB;AAcA,eAAe,MAAMC,YAAN,CAAmB;AACf,SAARC,QAAQ,CAACC,IAAD,EAAO;AAClB;AACA,UAAMC,UAAU,GAAGC,IAAI,CAACC,IAAL,CAAUD,IAAI,CAACE,GAAL,CAAS,IAAIC,IAAJ,GAAWC,OAAX,KAAuBN,IAAI,GAAG,IAAvC,IAA+C,IAAzD,CAAnB;;AACA,QAAIC,UAAU,GAAG,EAAjB,EAAqB;AACjB,aAAOA,UAAU,GAAG,aAApB;AACH;;AAED,UAAMM,UAAU,GAAGL,IAAI,CAACC,IAAL,CAAUF,UAAU,GAAG,EAAvB,CAAnB;;AACA,QAAIM,UAAU,GAAG,EAAjB,EAAqB;AACjB,aAAOA,UAAU,GAAG,aAApB;AACH;;AAED,UAAMC,QAAQ,GAAGN,IAAI,CAACC,IAAL,CAAUI,UAAU,GAAG,EAAvB,CAAjB;;AACA,QAAIC,QAAQ,GAAG,EAAf,EAAmB;AACf,aAAOA,QAAQ,GAAG,YAAlB;AACH;;AAED,UAAMC,OAAO,GAAGP,IAAI,CAACC,IAAL,CAAUK,QAAQ,GAAG,EAArB,CAAhB;;AAEA,QAAIC,OAAO,GAAG,CAAd,EAAiB;AACb,aAAQ,GAAEA,OAAQ,aAAlB;AACH;;AAED,WAAOb,MAAM,CAACc,IAAP,CAAYV,IAAZ,EAAkBW,MAAlB,CAAyB,YAAzB,CAAP;AACH;;AAImB,SAAbC,aAAa,GAAG;AACnB,WAAO,CACH;AAAEC,MAAAA,IAAI,EAAE,SAAR;AAAmBC,MAAAA,EAAE,EAAE;AAAvB,KADG,EAEH;AAAED,MAAAA,IAAI,EAAE,SAAR;AAAmBC,MAAAA,EAAE,EAAE;AAAvB,KAFG,EAGH;AAAED,MAAAA,IAAI,EAAE,SAAR;AAAmBC,MAAAA,EAAE,EAAE;AAAvB,KAHG,EAIH;AAAED,MAAAA,IAAI,EAAE,SAAR;AAAmBC,MAAAA,EAAE,EAAE;AAAvB,KAJG,EAKH;AAAED,MAAAA,IAAI,EAAE,SAAR;AAAmBC,MAAAA,EAAE,EAAE;AAAvB,KALG,EAMH;AAAED,MAAAA,IAAI,EAAE,SAAR;AAAmBC,MAAAA,EAAE,EAAE;AAAvB,KANG,EAOH;AAAED,MAAAA,IAAI,EAAE,SAAR;AAAmBC,MAAAA,EAAE,EAAE;AAAvB,KAPG,EAQH;AAAED,MAAAA,IAAI,EAAE,SAAR;AAAmBC,MAAAA,EAAE,EAAE;AAAvB,KARG,EASH;AAAED,MAAAA,IAAI,EAAE,SAAR;AAAmBC,MAAAA,EAAE,EAAE;AAAvB,KATG,EAUH;AAAED,MAAAA,IAAI,EAAE,UAAR;AAAoBC,MAAAA,EAAE,EAAE;AAAxB,KAVG,EAWH;AAAED,MAAAA,IAAI,EAAE,UAAR;AAAoBC,MAAAA,EAAE,EAAE;AAAxB,KAXG,EAYH;AAAED,MAAAA,IAAI,EAAE,UAAR;AAAoBC,MAAAA,EAAE,EAAE;AAAxB,KAZG,CAAP;AAcH;;AAEkB,SAAZC,YAAY,GAAG;AAClB,QAAIC,KAAK,GAAG,EAAZ;;AACA,SAAK,IAAIC,CAAC,GAAG,IAAb,EAAmBA,CAAC,IAAI,IAAxB,EAA8BA,CAAC,EAA/B,EAAmC;AAC/BD,MAAAA,KAAK,CAACE,IAAN,CAAWD,CAAX;AACH;;AACD,WAAOD,KAAP;AACH;;AAEiB,SAAXG,WAAW,CAACC,KAAD,EAAQC,IAAR,EAAc;AAC5B,QAAIC,MAAM,GAAG,IAAIjB,IAAJ,CAASgB,IAAT,EAAeD,KAAf,EAAsB,CAAtB,EAAyBG,OAAzB,EAAb;AACA,QAAIP,KAAK,GAAG,EAAZ;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIK,MAArB,EAA6BL,CAAC,EAA9B,EAAkC;AAC9BD,MAAAA,KAAK,CAACE,IAAN,CAAWD,CAAX;AACH;;AACD,WAAOD,KAAP;AACH;;AAEiB,SAAXQ,WAAW,CAACC,IAAD,EAAO;AACrB,QAAIL,KAAK,GAAGK,IAAI,CAACC,QAAL,KAAkB,CAA9B;AACA,QAAIL,IAAI,GAAGI,IAAI,CAACE,WAAL,EAAX;AACA,WAAO,WAAWP,KAAX,GAAmB,OAAnB,GAA6BC,IAApC;AACH;;AAGsB,SAAhBO,gBAAgB,CAACH,IAAD,EAAO;AAC1B,QAAI,CAACA,IAAL,EAAW,OAAO,EAAP;AACX,WAAO,CAACA,IAAI,CAACF,OAAL,EAAD,EAAiBE,IAAI,CAACC,QAAL,KAAkB,CAAnC,EAAsCD,IAAI,CAACE,WAAL,EAAtC,EAA0DE,IAA1D,CAA+D,GAA/D,CAAP;AACH;;AAEc,SAARC,QAAQ,CAACC,SAAD,EAAY;AACvB,QAAIN,IAAI,GAAG,IAAIpB,IAAJ,CAAS0B,SAAT,CAAX;AACA,QAAIC,GAAG,GAAGP,IAAI,CAACF,OAAL,EAAV;AACA,QAAIH,KAAK,GAAGK,IAAI,CAACC,QAAL,KAAkB,CAA9B;AACA,QAAIL,IAAI,GAAGI,IAAI,CAACE,WAAL,EAAX;AACA,WAAOK,GAAG,GAAG,GAAN,GAAYnC,WAAW,CAACuB,KAAD,CAAvB,GAAiC,IAAjC,GAAwCC,IAA/C;AACH;;AAjF6B","sourcesContent":["\nimport moment from 'moment';\n\nconst month_to_vi = {\n    1: 'tháng 1',\n    2: 'tháng 2',\n    3: 'tháng 3',\n    4: 'tháng 4',\n    5: 'tháng 5',\n    6: 'tháng 6',\n    7: 'tháng 7',\n    8: 'tháng 8',\n    9: 'tháng 9',\n    10: 'tháng 10',\n    11: 'tháng 11',\n    12: 'tháng 12'\n}\nexport default class DateTimeUtil {\n    static diffTime(time) {\n        // Second\n        const secondDiff = Math.ceil(Math.abs(new Date().getTime() - time * 1000) / 1000);\n        if (secondDiff < 60) {\n            return secondDiff + ' giây trước';\n        }\n\n        const minuteDiff = Math.ceil(secondDiff / 60);\n        if (minuteDiff < 60) {\n            return minuteDiff + ' phút trước';\n        }\n\n        const hourDiff = Math.ceil(minuteDiff / 60);\n        if (hourDiff < 24) {\n            return hourDiff + ' giờ trước';\n        }\n\n        const dayDiff = Math.ceil(hourDiff / 24);\n\n        if (dayDiff < 3) {\n            return `${dayDiff} ngày trước`;\n        }\n\n        return moment.unix(time).format('DD/MM/YYYY');\n    }\n\n\n\n    static getArrayMonth() {\n        return [\n            { name: 'Tháng 1', id: 1 },\n            { name: 'Tháng 2', id: 2 },\n            { name: 'Tháng 3', id: 3 },\n            { name: 'Tháng 4', id: 4 },\n            { name: 'Tháng 5', id: 5 },\n            { name: 'Tháng 6', id: 6 },\n            { name: 'Tháng 7', id: 7 },\n            { name: 'Tháng 8', id: 8 },\n            { name: 'Tháng 9', id: 9 },\n            { name: 'Tháng 10', id: 10 },\n            { name: 'Tháng 11', id: 11 },\n            { name: 'Tháng 12', id: 12 }\n        ]\n    }\n\n    static getArrayYear() {\n        let array = [];\n        for (var i = 1920; i <= 2020; i++) {\n            array.push(i);\n        }\n        return array;\n    }\n\n    static getArrayDay(month, year) {\n        let maxDay = new Date(year, month, 0).getDate();\n        let array = [];\n        for (var i = 1; i <= maxDay; i++) {\n            array.push(i);\n        }\n        return array;\n    }\n\n    static formatMonth(date) {\n        var month = date.getMonth() + 1;\n        var year = date.getFullYear();\n        return \"Tháng \" + month + \" năm \" + year;\n    }\n\n\n    static toStringDiffTime(date) {\n        if (!date) return '';\n        return [date.getDate(), date.getMonth() + 1, date.getFullYear()].join('/');\n    }\n\n    static toString(timestamp) {\n        let date = new Date(timestamp);\n        let day = date.getDate();\n        let month = date.getMonth() + 1;\n        let year = date.getFullYear();\n        return day + ' ' + month_to_vi[month] + ', ' + year;\n    }\n\n}\n\n"]},"metadata":{},"sourceType":"module"}