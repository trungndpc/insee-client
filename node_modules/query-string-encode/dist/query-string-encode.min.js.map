{"version":3,"file":"query-string-encode.min.js","sources":["index.js"],"sourcesContent":["export default function queryStringEncode(input) {\n    // Avoid [].includes (needs to be polyfilled)\n    if (!input || [Array, Object].indexOf(input.constructor) === -1) {\n        // Always return string, even for inputs that can't be serialized\n        return \"\";\n    }\n    var flattened = [];\n    (function flatten(input, path) {\n        if (!input || [Boolean, Number, String].indexOf(input.constructor) !== -1) {\n            var serializedPath = path.map(function (key, index) { return index ? \"[\" + key + \"]\" : key; }).join(\"\");\n            // Replace null and undefined with empty strings\n            flattened.push([serializedPath, input == null ? \"\" : input]);\n        }\n        else if ([Array, Object].indexOf(input.constructor) !== -1) {\n            for (var key in input) {\n                if (input.hasOwnProperty(key)) {\n                    flatten(input[key], path.concat([key]));\n                }\n            }\n        }\n    })(input, []);\n    return flattened.map(function (pair) { return pair.map(encodeURIComponent).join(\"=\"); }).join(\"&\");\n}\n"],"names":["input","Array","Object","indexOf","constructor","flattened","flatten","path","Boolean","Number","String","key","hasOwnProperty","concat","serializedPath","map","index","join","push","pair","encodeURIComponent"],"mappings":";0NAAe,SAA2BA,GAEtC,IAAKA,IAAyD,KAA/CC,MAAOC,QAAQC,QAAQH,EAAMI,aAExC,MAAO,GAEX,IAAIC,KAeJ,OAdA,SAAUC,EAAQN,EAAOO,GACrB,GAAKP,IAAmE,KAAzDQ,QAASC,OAAQC,QAAQP,QAAQH,EAAMI,cAKjD,IAAoD,KAA/CH,MAAOC,QAAQC,QAAQH,EAAMI,aACnC,IAAK,IAAIO,KAAOX,EACRA,EAAMY,eAAeD,IACrBL,EAAQN,EAAMW,GAAMJ,EAAKM,QAAQF,SAR8B,CACvE,IAAIG,EAAiBP,EAAKQ,IAAI,SAAUJ,EAAKK,GAAS,OAAOA,EAAQ,IAAML,EAAM,IAAMA,IAAQM,KAAK,IAEpGZ,EAAUa,MAAMJ,EAAyB,MAATd,EAAgB,GAAKA,KAJ7D,CAaGA,MACIK,EAAUU,IAAI,SAAUI,GAAQ,OAAOA,EAAKJ,IAAIK,oBAAoBH,KAAK,OAASA,KAAK"}