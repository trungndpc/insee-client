/*! queryStringEncode v1.0.0 | (c) 2018 Albin Larsson | Licensed under MIT */
function queryStringEncode(input) {
    // Avoid [].includes (needs to be polyfilled)
    if (!input || [Array, Object].indexOf(input.constructor) === -1) {
        // Always return string, even for inputs that can't be serialized
        return "";
    }
    var flattened = [];
    (function flatten(input, path) {
        if (!input || [Boolean, Number, String].indexOf(input.constructor) !== -1) {
            var serializedPath = path.map(function (key, index) { return index ? "[" + key + "]" : key; }).join("");
            // Replace null and undefined with empty strings
            flattened.push([serializedPath, input == null ? "" : input]);
        }
        else if ([Array, Object].indexOf(input.constructor) !== -1) {
            for (var key in input) {
                if (input.hasOwnProperty(key)) {
                    flatten(input[key], path.concat([key]));
                }
            }
        }
    })(input, []);
    return flattened.map(function (pair) { return pair.map(encodeURIComponent).join("="); }).join("&");
}

export default queryStringEncode;
