"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const native_bridge_1 = require("./utils/native-bridge");
const config_1 = require("./config");
/**
 * Class chứa các action liên quan đến webview
 */
class H5 {
    /**
     * Thay đổi tiêu đề của webview
     * @example
     * ZJSBridge.H5.changeTitleHeader("new title", e => {console.log(e)})
     * @param {string} title Tiêu đề của webview muốn đổi
     * @param {void} callback Hàm callback trả về kết quả sau khi gọi action
     */
    static changeTitleHeader(title, callback) {
        return native_bridge_1.default.jsCall(config_1.Action.changetitleheader, { title: title }, callback);
    }
    /**
     * Clear cache của webview
     * @example
     * ZJSBridge.H5.changeTitleHeader("new title", e => {console.log(e)})
     * @param {string} title Tiêu đề của webview muốn đổi
     * @param {void} callback Hàm callback trả về kết quả sau khi gọi action
     */
    static clearCacheWebview(title, callback) {
        return native_bridge_1.default.jsCall(config_1.Action.clearcachewebview, { title: title }, callback);
    }
    /**
     * Thay đổi nút bên trái trên navigation
     * @example
     * ZJSBridge.H5.configLeftButton(options, e => {console.log(e)})
     * @param {object} options Option của left button muốn thay đổi
     * ```
     * {
     *     "buttonType": 1,
     *     "dataConfig": {
     *           "confirmToExit": 1,
     *           "dialogMessage": "đây là custom thông báo đóng"
     *      }
     * }
     * ```
     * - "buttonType":
     *      - 0: back   - thực hiện hành vi quay về trang trước đó đã xem như history.
     *      - 1: close  - thực hiện hành vi thoái hẳn ra khỏi trang web.
     *      - 2: both   - tùy vào action mà user thực hiện vào nut back hay close mà phát sinh sự kiện tương ứng. <br> Ban đầu mới vào trang web thì chỉ hiện nút back, khi duyệt web có độ sâu history lớn hơn 1 thì sẽ hiện thêm nút close.
     * - "confirmToExit":
     *      - 0: Thoát không cần confirm (mặc định)
     *      - 1: Show native dialog
     *      - 2: Chuyển quyền xử lí xuống cho H5. Khi user nhấn X, hoặc lần nhấn back cuối cùng (sẽ thoát) thì gọi H5 tự xử lý và gọi action close sau. Trong lúc web đang xử lý (như show dialog hỏi) mà user nhấn close nữa thì Webview sẽ vẫn đóng.
     * - Để tự handle sự kiện close webview, H5 cần:
     *      - Gọi ZJSBridge.onCloseWebview(callback), với callback là hàm muốn gọi khi có sự kiện close Webview.
     *      - Gọi <a href="#.closeWebview">ZJSBridge.H5.closeWebview</a> để close Webview khi cần
     *      - Example:
     * ```
     * ZJSBridge.onCloseWebview(() => {
     *    alert("Bạn muốn đóng trang này?")
     *    ZJSBridge.H5.closeWebview()
     * })
     * ```
     * @param {void} callback Hàm callback trả về kết quả sau khi gọi action
     *
     */
    static configLeftButton(options, callback) {
        if (!options || (!options.hasOwnProperty('buttonType') && !options.hasOwnProperty('dataConfig'))) {
            throw 'data is invalid';
        }
        return native_bridge_1.default.jsCall(config_1.Action.changeleftbuttonbar, options, callback);
    }
    /**
     * Cấu hình danh sách menu bên phải header của Zalo webview
     * @param {object} listMenus
     * ```
     * [{
     *   "title": "Share to friend",
     *   "action": "action.open.sharesheet",
     *   "type": 0,
     *   "data": {
     *      "type": 5,
     *       "avt": "https://s120.avatar.talk.zdn.vn/5/c/d/8/3/120/4befce38fd0f83177003c63fb7a64b70.jpg",
     *       "uid": xxx,
     *       "dpn": "Zalo Transport"
     *   },
     *   "iconUrl": "https://s120.avatar.talk.zdn.vn/5/c/d/8/3/120/4befce38fd0f83177003c63fb7a64b70.jpg",
     *   "showAsAction": 1
     *},
     *{
     *  "title": "Post on timeline",
     *   "action": "action.open.postfeed",
     *   "type": 0,
     *   "data": {
     *       "type": 5,
     *       "avt": "https://s120.avatar.talk.zdn.vn/5/c/d/8/3/120/4befce38fd0f83177003c63fb7a64b70.jpg",
     *       "uid": xxx,
     *       "dpn": "Zalo Transport"
     *   }
     *}]
     * ```
     * - title: Title của menu item
     * - action: Dùng lại action hiện tại
     * - data: Data của Action hiện tại
     * - type: Hiện tại không dùng
     * @param {number} supportToolBar
     * @param {number} reset
     * @param {void} actionCallback tên hàm callback được zalo native gọi sau khi thực hiện xong một menu item.
     * @param {void} callback
     */
    static configRightMenu(listMenus, supportToolBar, reset, actionCallback, callback) {
        const params = {
            supportToolBar: supportToolBar,
            reset: reset,
            menuListItems: listMenus,
            zapp: native_bridge_1.default.getAppId(),
            callback: actionCallback,
        };
        return native_bridge_1.default.jsCall(config_1.Action.createoptionmenu, params, callback);
    }
    /**
     * Đóng webview
     * @example
     * ZJSBridge.H5.closeWebview(e => {console.log(e)})
     * @param {void} callback Hàm callback trả về kết quả sau khi gọi action
     */
    static closeWebview(callback) {
        return native_bridge_1.default.jsCall(config_1.Action.closewindow, {}, callback);
    }
    /**
     * Mở cửa sổ authen qua finger print hoặc faceid
     * @example
     * ZJSBridge.H5.openBioAuthentication(options, e => {console.log(e)})
     * @param {object} options
     * ```
     * {
     *  "secret_data": "aGkgYmFu",
     *   "app_id": "1867276734621734136",
     *   "ui": {
     *       "title": "Biometric login for my app",
     *       "sub_title": "Log in using your biometric credential",
     *       "negative_text": "Cancel"
     *   },
     *   "require_fingerprint": true
     * }
     * ```
     * @param {void} callback Hàm callback trả về kết quả sau khi gọi action
     */
    static openBioAuthentication(options, callback) {
        return native_bridge_1.default.jsCall(config_1.Action.bioauthen, options, callback);
    }
    /**
     * Call JSBridge zbrowser
     * @example
     * ZJSBridge.H5.jsBridge(options, e => {console.log(e)})
     * @param {object} options
     * ```
     * {
     * "actions": [
     *  {
     *      "actionType":  int (1: get stats, 2: clear cache, 3:check resource exists),
     *      "data": String (url của item)
     *  }
     *  ],
     *  "configVersion": 0
     * }
     * ```
     * @param {void} callback Hàm callback trả về kết quả sau khi gọi action
     */
    static jsBridge(options, callback) {
        return native_bridge_1.default.jsCall(config_1.Action.jsbridge, options, callback);
    }
    /**
     * Thay đổi color header của webview
     * @example
     * ZJSBridge.H5.changeColorHeader("#6400bfff", e => {console.log(e)})
     * @param {string} color Color header của webview muốn đổi
     * @param {void} callback Hàm callback trả về kết quả sau khi gọi action
     */
    static changeColorHeader(color, callback) {
        return native_bridge_1.default.jsCall(config_1.Action.changeColorHeader, { data: color }, callback);
    }
    /**
     * Một phần của flow H5-Bio-Authentication. Dùng cho H5 kiểm tra xem bio-factor có bị thay đổi
     * gì so với trước đây ko (thêm vân tay, reset...)
     * @example
     * ZJSBridge.H5.checkStateAuthen(e => {console.log(e)})
     * @param {void} callback Hàm callback trả về kết quả sau khi gọi action.
     * Thành công trả về: {"error_code":0, "data":{"bio_state":"xxx"}
     */
    static checkStateAuthen(callback) {
        return native_bridge_1.default.jsCall(config_1.Action.checkStateAuthen, {}, callback);
    }
    /**
     * JS cho phép tạo shortcut ở màn hình launcher, với "url sẽ được mở inapp-browser.
     * @example
     * ZJSBridge.H5.createShortcut(e => {console.log(e)})
     * @param {object} options
     * ```
     * {
     *     "data: {
     *         "url": "http://zalo.me/01698383183",
     *         "featureId": -1,
     *         "title": "HaTM",
     *         "iconUrl": "http://avatar.talk.zdn.vn/2/d/4/0/7/75/31bc7db88a33f2c0c7311d4beb01efbf.jpg"
     *     }
     * }
     * ```
     * - featureId: Xác định feature khi mở link.
     * @param {void} callback Hàm callback trả về kết quả sau khi gọi action.
     * Thành công trả về: {"error_code":0, "data":{"bio_state":"xxx"}
     */
    static createShortcut(options, callback) {
        return native_bridge_1.default.jsCall(config_1.Action.createshortcut, options, callback);
    }
}
exports.default = H5;
