"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const request_1 = require("./request");
const common_1 = require("./common");
class AuthUtils {
    constructor() {
        this.getAccessToken = (cb) => {
            if (this.accessToken) {
                cb && cb(this.accessToken);
            }
            else {
                request_1.default.execute("https://oauth.zaloapp.com/v3/access_token", "get", {
                    app_id: this.appId,
                    redirect_uri: this.redirectUri,
                    code: this.authenticationCode,
                    isSDK: true,
                }, (response) => {
                    if (response) {
                        if (response.access_token) {
                            this.accessToken = response.access_token;
                            const expiredIn = parseInt(response.expires_in) * 1000;
                            // Auto get new Access Token after expired time
                            setTimeout(() => {
                                this.accessToken = "";
                                this.getAccessToken();
                            }, expiredIn);
                        }
                    }
                    return cb && cb(this.accessToken);
                });
            }
        };
        this.accessToken = null;
        this.authenticationCode = common_1.getToken("zoauth") || "";
        this.appId = window.zAppID || common_1.getToken("zapp");
        this.redirectUri = `https://h5.zdn.vn/static/${this.appId}/`;
    }
}
AuthUtils.getInstance = () => {
    if (!AuthUtils.instance) {
        AuthUtils.instance = new AuthUtils();
        return AuthUtils.instance;
    }
    return AuthUtils.instance;
};
exports.default = AuthUtils.getInstance();
